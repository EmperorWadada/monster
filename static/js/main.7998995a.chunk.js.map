{"version":3,"sources":["components/card-list/card/card.component.jsx","components/card-list/card-list.component.jsx","components/card-list/search-box/search-box.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","react_default","a","createElement","className","alt","src","concat","monster","id","name","email","CardList","map","card_component_Card","key","Search","_ref","placeholder","handleChange","type","onChange","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","searchFiled","_this2","fetch","then","data","json","users","setState","_this3","_this$state","filterMonsters","filter","toLowerCase","includes","search_box_search_box","e","target","value","card_list_component_CardList","Component","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App_0","document","getElementById"],"mappings":"mTAGaA,eAAO,SAACC,GAAD,OAChBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKE,IAAI,UAAUC,IAAG,wBAAAC,OAA0BP,EAAMQ,QAAQC,GAAxC,4BACtBR,EAAAC,EAAAC,cAAA,UAAKH,EAAMQ,QAAQE,MACnBT,EAAAC,EAAAC,cAAA,SAAIH,EAAMQ,QAAQG,UCHbC,EAAW,SAACZ,GACrB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAEXJ,EAAMQ,QAAQK,IAAI,SAAAL,GAAO,OACrBP,EAAAC,EAAAC,cAACW,EAAD,CAAMC,IAAKP,EAAQC,GAAID,QAASA,QCIjCQ,SATD,SAAAC,GAAA,IAAEC,EAAFD,EAAEC,YAAaC,EAAfF,EAAeE,aAAf,OACVlB,EAAAC,EAAAC,cAAA,SACIC,UAAU,SACVgB,KAAK,SACLF,YAAcA,EACdG,SAAUF,MC8BHG,qBAhCb,SAAAA,IAAa,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACXC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAEKI,MAAQ,CACXtB,QAAS,GACTuB,YAAa,IALJR,mFAUM,IAAAS,EAAAN,KACjBO,MAAM,8CACLC,KAAK,SAAAC,GAAI,OAAIA,EAAKC,SAClBF,KAAK,SAAAG,GAAK,OAAIL,EAAKM,SAAS,CAAC9B,QAAS6B,uCAIjC,IAAAE,EAAAb,KAAAc,EACyBd,KAAKI,MAA7BC,EADDS,EACCT,YACDU,EAFAD,EACchC,QACWkC,OAAO,SAAAlC,GAAO,OAC3CA,EAAQE,KAAKiC,cAAcC,SAASb,EAAYY,iBAClD,OAEE1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,UAAKuB,KAAKI,MAAMC,aAChB9B,EAAAC,EAAAC,cAAC0C,EAAD,CAAQ3B,YAAY,iBAAiBC,aAAc,SAAC2B,GAAD,OAAOP,EAAKD,SAAS,CAACP,YAAae,EAAEC,OAAOC,WAC/F/C,EAAAC,EAAAC,cAAC8C,EAAD,CAAUzC,QAASiC,YA5BTS,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAR,EAAA,GAAAZ,KAAAoB,EAAAC,KAAA,UAAqBrB,KAAK,SAAAjB,GAAiD,IAA9CuC,EAA8CvC,EAA9CuC,OAAQC,EAAsCxC,EAAtCwC,OAAQC,EAA8BzC,EAA9ByC,OAAQC,EAAsB1C,EAAtB0C,OAAQC,EAAc3C,EAAd2C,QAC3DJ,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,MCDdS,IAASC,OACP7D,EAAAC,EAAAC,cAACF,EAAAC,EAAM6D,WAAP,KACE9D,EAAAC,EAAAC,cAAC6D,EAAD,OAEFC,SAASC,eAAe,SAM1Bf","file":"static/js/main.7998995a.chunk.js","sourcesContent":["import React from 'react'\r\nimport './card-style.css'\r\n\r\nexport const Card = (props) => (\r\n    <div className='card-container'>\r\n        <img alt='monster' src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\r\n        <h1>{props.monster.name}</h1>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n) ","import React from 'react'\r\nimport  './card-list.component.css'\r\nimport {Card} from './card/card.component'\r\n\r\nexport const CardList = (props) => {\r\n    return (\r\n        <div className=\"card-list\">\r\n        {\r\n            props.monster.map(monster => (\r\n                <Card key={monster.id} monster={monster}/>\r\n            ))\r\n        }\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport './search-box.css'\r\n\r\n\r\nconst Search =({placeholder, handleChange}) => (\r\n    <input \r\n        className='search'\r\n        type='search' \r\n        placeholder= {placeholder}\r\n        onChange={handleChange}\r\n    /> \r\n)\r\n\r\nexport default Search;","import React, { Component } from 'react'\nimport {CardList} from './components/card-list/card-list.component'\nimport Search from './components/card-list/search-box/search-box'\nimport './App.css';\n\nclass App extends Component {\n\n  constructor(){\n    super();\n\n    this.state = {\n      monster: [],\n      searchFiled: ''\n\n    };\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(data => data.json())\n    .then(users => this.setState({monster: users}))\n    \n  }\n\n  render(){\n    const {searchFiled, monster} = this.state;\n    const filterMonsters = monster.filter(monster => \n      monster.name.toLowerCase().includes(searchFiled.toLowerCase()))\n    return(\n      \n      <div className='App'>\n        <h1>{this.state.searchFiled}</h1>\n        <Search placeholder=\"Search Monster\" handleChange={(e) => this.setState({searchFiled: e.target.value})}/>\n        <CardList monster={filterMonsters} />\n      </div>\n    )\n  }\n}\n\nexport default App;\n ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}